{"version":3,"sources":["pages/auth/register.jsx","components/authBackground/authBackground.jsx"],"names":["Register","props","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","setTimeout","getUserDetails","bind","console","log","date_of_birth","setState","error","errorToast","toast","dismiss","position","POSITION","TOP_LEFT","autoClose","state","redirect","password","email","phone","Date","tosAgreement","provider","user","token","loading","isAuthenticated","signup","onChange","handleSubmit","Component","e","document","createElement","type","authorize","src","api_key","body","appendChild","window","IN","User","API","Profile","fields","result","alert","values","firstName","lastName","err","_this2","preventDefault","data","dob","axios","method","url","headers","Content-Type","then","response","responseJson","sessionStorage","setItem","JSON","stringify","Token","uuid","login","catch","key","event","target","value","res","_this3","w3","U3","notify","_this4","responseGoogle","responseTwitter","_this$state","react__WEBPACK_IMPORTED_MODULE_0___default","a","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","className","_components_authBackground_authBackground__WEBPACK_IMPORTED_MODULE_2__","onSubmit","htmlFor","name","ev","placeholder","required","react_date_picker__WEBPACK_IMPORTED_MODULE_5___default","onDateChange","Calendar","ref","checked","onClick","react_google_login__WEBPACK_IMPORTED_MODULE_6___default","clientId","buttonText","onSuccess","onFailure","react_twitter_auth_lib_react_twitter_auth_component_js__WEBPACK_IMPORTED_MODULE_11___default","loginUrl","forceLogin","clientKey","requestTokenUrl","react_facebook_login__WEBPACK_IMPORTED_MODULE_7___default","appId","autoLoad","callback","cssClass","icon","textButton","disabled","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","react_toastify__WEBPACK_IMPORTED_MODULE_9__","AuthBackground","Array","isArray","length","tempArr","slice","i","swapIndex","Math","trunc","random","tmp","imagesList","shuffleList","bottomImages","temArr","rearrangeArray","concat","_toConsumableArray","map","imageUrl","index","alt"],"mappings":"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","file":"static/js/Register.8b38873e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../assets/css/auth.css\";\r\nimport AuthBackground from \"./../../components/authBackground/authBackground\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n/*\r\nimport LinkedIn from \"linkedin-login-for-react\";\r\n*/\r\n/*import LinkedIn from 'react-linkedin-login'*/\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport TwitterLogin from 'react-twitter-auth/lib/react-twitter-auth-component.js';\r\n\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        redirect: false,\r\n        password: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        date_of_birth: new Date(1980, 1, 1),\r\n        tosAgreement: \"\",\r\n        provider: \"email\",\r\n        user: null,\r\n        token: '',\r\n        loading: false,\r\n        isAuthenticated: false,\r\n    };\r\n    //this.register = this.register.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    // this.responseLinkedin = this.responseLinkedin.bind(this);\r\n    // this.responseTwittrer = this.responseTwittrer.bind(this);\r\n    // this.responseTwitter = this.responseTwitter.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n    componentDidMount(){\r\n            const e = document.createElement(\"script\");\r\n            e.type = \"text/javascript\";\r\n            e.authorize = true;\r\n            e.src = \"http://platform.linkedin.com/in.js?async=true\";\r\n            /*const t = document.getElementsByTagName(\"script\")[0];\r\n            t.parentNode.insertBefore(e, t)*/\r\n            e.api_key = \"77pb6qtint69q4\";\r\n            document.body.appendChild(e);\r\n    }\r\n\r\n    linkedInLogin = () => {\r\n        setTimeout(function(){\r\n            this.getUserDetails()\r\n        }.bind(this),1000);\r\n        console.log( \"Loaded\" )\r\n    }\r\n\r\n\r\n/*    linkedInLogin = () => {\r\n\r\n    this.getUserDetails();\r\n    console.log('clicked');\r\n\r\n    }*/\r\n\r\n\r\n    getUserDetails() {\r\n        window.IN.User.authorize(function(){\r\n            window.IN.API.Profile(\"me\")\r\n                .fields([\"id\", \"firstName\", \"lastName\", \"pictureUrl\", \"publicProfileUrl\"])\r\n                .result(function(result) {\r\n                    console.log(result);\r\n                    alert(\"Successfull login from linkedin : \"+ result.values[0].firstName + \" \" + result.values[0].lastName);\r\n                })\r\n                .error(function(err) {\r\n                    console.log('Import error - Error occured while importing data')\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      dob: this.state.date_of_birth,\r\n      password: this.state.password,\r\n      tosAgreement: this.state.tosAgreement,\r\n      provider: \"email\",\r\n      redirect: false\r\n      //redirectToReferrer: false\r\n    };\r\n\r\n    const url = \"http://api.gclout.com:3000/users\";\r\n    console.log(data);\r\n\r\n    /* console.log(this.state); */\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: data,\r\n      /* mode: 'no-cors', */\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(response => {\r\n\r\n        let responseJson = response;\r\n        console.log(responseJson);\r\n\r\n        if (responseJson.data) {\r\n\r\n          sessionStorage.setItem(\"data\", JSON.stringify(responseJson));\r\n          sessionStorage.setItem(\"token\", responseJson.data.Token);\r\n          sessionStorage.setItem(\"uuid\", responseJson.data.uuid);\r\n\r\n          this.props.login(responseJson.data.user);\r\n          this.setState({\r\n            redirect: true\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        /*this.notify(error)*/\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  onChange(key, event) {\r\n    this.setState({\r\n      [key]: event.target.value\r\n    });\r\n  }\r\n\r\n  // toggleBox(){\r\n  //   this.setState({tosAgreement : !this.state.tosAgreement});\r\n  //   console.log(this.state.tosAgreement);\r\n  // }\r\n/*callbackLinkedIn = (error, code, redirectUri) => {\r\n      if(error){\r\nconsole.log('something jus happen rai now')\r\n      } else {\r\n      }\r\n};*/\r\n  signup(res, type) {\r\n    //let postData;\r\n\r\n    if (type === \"facebook\" && res.email) {\r\n\r\n      const data = {\r\n\r\n        email: res.email,\r\n        provider: type,\r\n        tosAgreement: true\r\n\r\n      }\r\n      return data;\r\n    }\r\n\r\n    if (type === \"google\" && res.w3.U3) {\r\n\r\n      const data = {\r\n\r\n        provider: type,\r\n        email: res.w3.U3,\r\n        tosAgreement: true,\r\n        password: \"password\"\r\n\r\n      };\r\n\r\n      console.log(data);\r\n      const url = \"http://api.gclout.com:3000/users\";\r\n\r\n      axios({\r\n\r\n        method: \"post\",\r\n        url: url,\r\n        data: data,\r\n        headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          }\r\n\r\n      }).then(response => {\r\n\r\n              console.log(response.data);\r\n              let responseJson = response.data;\r\n\r\n              if (responseJson) {\r\n//                console.log(responseJson.uuid);\r\n                  sessionStorage.setItem(\"data\", JSON.stringify(responseJson));\r\n                  this.props.login(responseJson.data.user);\r\n                /*this.setState({\r\n                  redirect: true\r\n                })*/\r\n              }\r\n\r\n      })\r\n          .catch(error => {\r\n\r\n              console.log(error)\r\n              this.notify(error)\r\n              this.setState({\r\n\r\n                  loading: false\r\n\r\n              });\r\n\r\n          });\r\n\r\n    }\r\n\r\n    /*if(type = \"linkedin\") {\r\n        const data = {\r\n            provider: type,\r\n            email: \"t@u.co\"\r\n        };\r\n        console.log(data);\r\n    }*/\r\n\r\n    if (type === \"twitter\" && res.email) {\r\n      console.log('twitter');\r\n     const data = {\r\n\r\n        provider: type,\r\n        email: res.email,\r\n        tosAgreement: true\r\n\r\n      };\r\n\r\n      console.log(data);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onDateChange = date_of_birth => this.setState({ date_of_birth });\r\n\r\n  errorToast = null;\r\n  notify = error => {\r\n    if (this.errorToast) {\r\n      toast.dismiss(this.errorToast);\r\n    }\r\n    this.errorToast = toast.error(\r\n      \"Registration Failed: \",\r\n      {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: false\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const responseFacebook = response => {\r\n      console.log(response);\r\n      this.signup(response, \"facebook\");\r\n    };\r\n        const responseGoogle = response => {\r\n            console.log(response);\r\n            this.signup(response, \"google\");\r\n        };\r\n\r\n    // const { password, email, phone, tosAgreement, data_of_birth } = this.state;\r\n\r\n    // function responseLinkedin(response) {\r\n    //     console.log(response);\r\n    //     this.signup(response, \"linkedin\");\r\n    // }\r\n\r\n    function responseTwitter(response) {\r\n          console.log(response);\r\n          this.signup(response, \"twitter\");\r\n      };\r\n\r\n    // function responseTwittrer(response) {\r\n    //     const token = response.headers.get('x-auth-token');\r\n    //     response.json().then(user => {\r\n    //         if (token) {\r\n    //             this.setState({isAuthenticated: true, user: user, token: token});\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n\r\n    const { password, email, phone, redirect, tosAgreement } = this.state;\r\n    if(redirect){\r\n\r\n        return (<Redirect to={\"/profile/create\"}/>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"auth-page d-flex\">\r\n          <AuthBackground />\r\n          <div className=\"authy\">\r\n            <div className=\"m-auto bg-white auth-page-card col-lg-7 col-md-8\">\r\n              <h2 className=\"auth-card-title text-center mb-3\">\r\n                Create A GClout Account\r\n              </h2>\r\n              <div className=\"row --with-divider\">\r\n                <div className=\"col-md-12 col-lg-6 mx-auto\">\r\n                  <form className=\"auth-form mb-4\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email address</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        onChange={ev => this.onChange(\"email\", ev)}\r\n                        value={email}\r\n                        placeholder=\"Email address\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={ev => this.onChange(\"password\", ev)}\r\n                        value={password}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md left\">\r\n                        <label htmlFor=\"phone\">Phone number</label>\r\n                        <input\r\n                          type=\"phone\"\r\n                          className=\"form-control\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Phone number\"\r\n                          onChange={ev => this.onChange(\"phone\", ev)}\r\n                          value={phone}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md right\">\r\n                        <label>Date of birth</label>\r\n                        <DatePicker\r\n                          className=\"form-date\"\r\n                          onChange={this.onDateChange}\r\n                          value={this.state.date_of_birth}\r\n                          Calendar={null}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"mr-2\"\r\n                          type=\"checkbox\"\r\n                          ref=\"check_me\"\r\n                          value={tosAgreement}\r\n                          onChange={e => {\r\n                            this.setState({ tosAgreement: e.target.checked });\r\n                          }}\r\n                          required\r\n                        />\r\n                        <label\r\n                          htmlFor=\"agreement\"\r\n                          className=\"form-check-label\"\r\n                          name=\"tosAgreement\"\r\n                        >\r\n                          I agree with terms and conditions\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-block btn-gclout-blue\"\r\n                      onClick={this.handleSubmit}\r\n                    >\r\n                      {this.state.loading ? (\r\n                        <i className=\"fas fa-circle-notch fa-spin\" />\r\n                      ) : (\r\n                        \"Register\"\r\n                      )}{\" \"}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n                <div className=\"vertical-divider\">OR</div>\r\n                <div className=\"col-md-12 col-lg-6 mx-auto\">\r\n                  <div className=\"social-buttons\">\r\n\r\n                      <GoogleLogin\r\n                          className=\"social-button-google btn btn-block\"\r\n                          clientId=\"721177315518-ebi0q400rdhuvphrkff962s5encqd3b4.apps.googleusercontent.com\"\r\n                          buttonText=\"Google\"\r\n                          onSuccess={responseGoogle}\r\n                          onFailure={responseGoogle}\r\n                      >\r\n                          <i className=\"fab fa-google\" /> Google\r\n                      </GoogleLogin>\r\n\r\n                      <TwitterLogin\r\n                         // loginUrl=\"http://localhost:3000/login/auth/twitter\"\r\n                          /*onFailure={this.onFailed}*/\r\n                          /*onSuccess={this.onSuccess}*/\r\n                          loginUrl=\"http://api.gclout.com:3000/users\"\r\n                          onSuccess={responseTwitter}\r\n                          onFailure={responseTwitter}\r\n                          forceLogin={true}\r\n                          className=\"social-button-twitter btn btn-block\"\r\n                          clientKey=\"JNjAaqePXPy5cXMjdlPYXuMWf\"\r\n                          requestTokenUrl=\"http://api.gclout.com:3000/users\"\r\n                          //requestTokenUrl=\"http://localhost:3000/login/auth/twitter/reverse\"\r\n                      >\r\n                        <i className=\"fab fa-twitter\" /> Twitter\r\n                      </TwitterLogin>\r\n\r\n                      <FacebookLogin\r\n                      appId=\"2171139129879186\"\r\n                      autoLoad={true}\r\n                      fields=\"name,email,picture\"\r\n                      callback={responseFacebook}\r\n                      cssClass=\"social-button-facebook btn btn-block\"\r\n                      icon=\"fa-facebook\"\r\n                      textButton=\"Facebook\"\r\n                    />\r\n\r\n                      {/* <LinkedIn\r\n                          clientId=\"77pb6qtint69q4\"\r\n                          callback={this.callbackLinkedIn}\r\n                          text=\"Login With LinkedIn\"\r\n                          onSuccess={responseLinkedin}\r\n                          onFailure={responseLinkedin}\r\n                          className=\"social-button-linkedin btn btn-block\"\r\n                      /> */}\r\n                      <button\r\n                        disabled\r\n                        className=\"social-button-linkedin btn btn-block\">\r\n                        <i className=\"fab fa-linkedin-in\" />\r\n                        Linkedin\r\n                      </button>\r\n\r\n                  </div>\r\n                  <p className=\"text-center\">\r\n                    Already have an account?{\" \"}\r\n                    <Link className=\"auth-page-link\" to=\"/login\">\r\n                      Sign in\r\n                    </Link>{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport \"./authBackground.css\";\n\nclass AuthBackground extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagesList: [],\n      shuffleList: [\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884672/gclout/1.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/2.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884668/gclout/16.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884667/gclout/15.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884664/gclout/13.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/11.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884660/gclout/9.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/7.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884654/gclout/4.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/5.png\",\n      ],\n      bottomImages: [\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/3.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884666/gclout/14.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/10.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/6.png\"\n      ]\n    }\n  }\n  rearrangeArray = (data) => {\n\n    if (Array.isArray(data) || data.length > 0) {\n\n        let tempArr = data.slice();\n\n        for (let i = 0; i < tempArr.length; i++) {\n            let swapIndex = Math.trunc(Math.random() * tempArr.length);\n            let tmp = tempArr[swapIndex];\n            tempArr[swapIndex] = tempArr[i];\n            tempArr[i] = tmp;\n        }\n        return tempArr;\n    }\n    return [];\n  }\n  componentDidMount() {\n    const temArr = this.rearrangeArray(this.state.shuffleList);\n    const fullArr = [temArr, ...this.state.bottomImages];\n    this.setState({\n      imagesList: temArr\n    })\n  }\n\n  render() {\n    \n    return (\n      <div className=\"d-flex align-items-stretch flex-wrap no-gutters auth-bg\">\n        <div className=\"auth-bg-overlay\" />\n        {this.state.imagesList.map((imageUrl, index) => (\n          <div className=\"col-md-3 col-sm-4 col-6 authBg\" key={\"key-\" + index}>\n            <img\n              src={imageUrl}\n              alt={\"bg-image-\" + index}\n              className=\"img-fluid\"\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AuthBackground;\n"],"sourceRoot":""}