{"version":3,"sources":["components/authBackground/authBackground.jsx","pages/auth/register.jsx"],"names":["AuthBackground","props","_this","_classCallCheck","this","_getPrototypeOf","call","_assertThisInitialized","data","Array","isArray","length","tempArr","slice","i","swapIndex","Math","trunc","random","tmp","state","imagesList","shuffleList","bottomImages","Component","temArr","rearrangeArray","setState","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","map","imageUrl","index","key","src","alt","Register","_defineProperty","setTimeout","getUserDetails","bind","console","log","date_of_birth","error","errorArray","response","Error","constructor","forEach","errorToast","toast","position","POSITION","TOP_LEFT","autoClose","redirect","password","email","phone","Date","tosAgreement","provider","user","token","loading","isAuthenticated","signup","onChange","handleSubmit","e","document","type","authorize","api_key","body","appendChild","window","IN","User","API","Profile","fields","result","alert","values","firstName","lastName","err","_this2","preventDefault","dob","axios","method","url","headers","Content-Type","then","responseJson","sessionStorage","setItem","JSON","stringify","Token","uuid","login","catch","notify","event","target","value","res","_this3","w3","U3","_this4","responseGoogle","responseTwitter","_this$state","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","_components_authBackground_authBackground__WEBPACK_IMPORTED_MODULE_2__","onSubmit","htmlFor","name","ev","placeholder","required","react_date_picker__WEBPACK_IMPORTED_MODULE_5___default","onDateChange","Calendar","ref","checked","onClick","react_google_login__WEBPACK_IMPORTED_MODULE_6___default","clientId","buttonText","onSuccess","onFailure","react_twitter_auth_lib_react_twitter_auth_component_js__WEBPACK_IMPORTED_MODULE_11___default","loginUrl","forceLogin","clientKey","requestTokenUrl","react_facebook_login__WEBPACK_IMPORTED_MODULE_7___default","appId","autoLoad","callback","cssClass","icon","textButton","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","react_toastify__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"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","file":"static/js/Register.b4fb8e5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./authBackground.css\";\r\n\r\nclass AuthBackground extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imagesList: [],\r\n      shuffleList: [\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884672/gclout/1.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/2.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884668/gclout/16.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884667/gclout/15.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884664/gclout/13.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/11.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884660/gclout/9.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/7.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884654/gclout/4.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/5.png\",\r\n      ],\r\n      bottomImages: [\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/3.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884666/gclout/14.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/10.png\",\r\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/6.png\"\r\n      ]\r\n    }\r\n  }\r\n  rearrangeArray = (data) => {\r\n\r\n    if (Array.isArray(data) || data.length > 0) {\r\n\r\n        let tempArr = data.slice();\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            let swapIndex = Math.trunc(Math.random() * tempArr.length);\r\n            let tmp = tempArr[swapIndex];\r\n            tempArr[swapIndex] = tempArr[i];\r\n            tempArr[i] = tmp;\r\n        }\r\n        return tempArr;\r\n    }\r\n    return [];\r\n  }\r\n  componentDidMount() {\r\n    const temArr = this.rearrangeArray(this.state.shuffleList);\r\n    // const fullArr = [temArr, ...this.state.bottomImages];\r\n    this.setState({\r\n      imagesList: temArr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"d-flex align-items-stretch flex-wrap no-gutters auth-bg\">\r\n        <div className=\"auth-bg-overlay\" />\r\n        {this.state.imagesList.map((imageUrl, index) => (\r\n          <div className=\"col-md-3 col-sm-4 col-6 authBg\" key={\"key-\" + index}>\r\n            <img\r\n              src={imageUrl}\r\n              alt={\"bg-image-\" + index}\r\n              className=\"img-fluid\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthBackground;\r\n","import React, { Component } from \"react\";\r\nimport \"../../assets/css/auth.css\";\r\nimport AuthBackground from \"./../../components/authBackground/authBackground\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n/*\r\nimport LinkedIn from \"linkedin-login-for-react\";\r\n*/\r\n/*import LinkedIn from 'react-linkedin-login'*/\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport TwitterLogin from 'react-twitter-auth/lib/react-twitter-auth-component.js';\r\n\r\n\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        redirect: false,\r\n        password: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        date_of_birth: new Date(1980, 1, 1),\r\n        tosAgreement: \"\",\r\n        provider: \"email\",\r\n        user: null,\r\n        token: '',\r\n        loading: false,\r\n        isAuthenticated: false,\r\n    };\r\n    //this.register = this.register.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    // this.responseLinkedin = this.responseLinkedin.bind(this);\r\n    // this.responseTwittrer = this.responseTwittrer.bind(this);\r\n    // this.responseTwitter = this.responseTwitter.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n    componentDidMount(){\r\n            const e = document.createElement(\"script\");\r\n            e.type = \"text/javascript\";\r\n            e.authorize = true;\r\n            e.src = \"http://platform.linkedin.com/in.js?async=true\";\r\n            /*const t = document.getElementsByTagName(\"script\")[0];\r\n            t.parentNode.insertBefore(e, t)*/\r\n            e.api_key = \"77pb6qtint69q4\";\r\n            document.body.appendChild(e);\r\n    }\r\n\r\n    linkedInLogin = () => {\r\n        setTimeout(function(){\r\n            this.getUserDetails()\r\n        }.bind(this),1000);\r\n        console.log( \"Loaded\" )\r\n    }\r\n\r\n\r\n/*    linkedInLogin = () => {\r\n\r\n    this.getUserDetails();\r\n    console.log('clicked');\r\n\r\n    }*/\r\n\r\n\r\n    getUserDetails() {\r\n        window.IN.User.authorize(function(){\r\n            window.IN.API.Profile(\"me\")\r\n                .fields([\"id\", \"firstName\", \"lastName\", \"pictureUrl\", \"publicProfileUrl\"])\r\n                .result(function(result) {\r\n                    console.log(result);\r\n                    alert(\"Successfull login from linkedin : \"+ result.values[0].firstName + \" \" + result.values[0].lastName);\r\n                })\r\n                .error(function(err) {\r\n                    console.log('Import error - Error occured while importing data')\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      dob: this.state.date_of_birth,\r\n      password: this.state.password,\r\n      tosAgreement: this.state.tosAgreement,\r\n      provider: \"email\",\r\n      redirect: false\r\n      //redirectToReferrer: false\r\n    };\r\n\r\n    const url = \"http://api.gclout.com:3000/users\";\r\n    console.log(data);\r\n\r\n    /* console.log(this.state); */\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: data,\r\n      /* mode: 'no-cors', */\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(response => {\r\n\r\n        let responseJson = response;\r\n        console.log(responseJson);\r\n\r\n        if (responseJson.data) {\r\n\r\n          sessionStorage.setItem(\"data\", JSON.stringify(responseJson));\r\n          sessionStorage.setItem(\"token\", responseJson.data.Token);\r\n          sessionStorage.setItem(\"uuid\", responseJson.data.uuid);\r\n\r\n          this.props.login(responseJson.data.user);\r\n          this.setState({\r\n            redirect: true\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        const myError = {\r\n          response: {\r\n            data: {\r\n              \"Error\" : [\r\n                'Please try again in a little while'\r\n              ]\r\n            }\r\n          }\r\n        }\r\n        this.notify(error || myError)\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  onChange(key, event) {\r\n    this.setState({\r\n      [key]: event.target.value\r\n    });\r\n  }\r\n\r\n  // toggleBox(){\r\n  //   this.setState({tosAgreement : !this.state.tosAgreement});\r\n  //   console.log(this.state.tosAgreement);\r\n  // }\r\n/*callbackLinkedIn = (error, code, redirectUri) => {\r\n      if(error){\r\nconsole.log('something jus happen rai now')\r\n      } else {\r\n      }\r\n};*/\r\n  signup(res, type) {\r\n    //let postData;\r\n\r\n    if (type === \"facebook\" && res.email) {\r\n\r\n      const data = {\r\n\r\n        email: res.email,\r\n        provider: type,\r\n        tosAgreement: true\r\n\r\n      }\r\n      return data;\r\n    }\r\n\r\n    if (type === \"google\" && res.w3.U3) {\r\n\r\n      const data = {\r\n\r\n        provider: type,\r\n        email: res.w3.U3,\r\n        tosAgreement: true,\r\n        password: \"password\"\r\n\r\n      };\r\n\r\n      console.log(data);\r\n      const url = \"http://api.gclout.com:3000/users\";\r\n\r\n      axios({\r\n\r\n        method: \"post\",\r\n        url: url,\r\n        data: data,\r\n        headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          }\r\n\r\n      }).then(response => {\r\n\r\n              console.log(response.data);\r\n              sessionStorage.setItem('id', res.data.uuid);\r\n              let responseJson = response.data;\r\n\r\n              if (responseJson) {\r\n//                console.log(responseJson.uuid);\r\n                  sessionStorage.setItem(\"data\", JSON.stringify(responseJson));\r\n                  this.props.login(responseJson.data.user);\r\n                /*this.setState({\r\n                  redirect: true\r\n                })*/\r\n              }\r\n\r\n      })\r\n          .catch(error => {\r\n\r\n              console.log(error)\r\n              this.notify(error)\r\n              this.setState({\r\n\r\n                  loading: false\r\n\r\n              });\r\n\r\n          });\r\n\r\n    }\r\n\r\n    /*if(type = \"linkedin\") {\r\n        const data = {\r\n            provider: type,\r\n            email: \"t@u.co\"\r\n        };\r\n        console.log(data);\r\n    }*/\r\n\r\n    if (type === \"twitter\" && res.email) {\r\n      console.log('twitter');\r\n     const data = {\r\n\r\n        provider: type,\r\n        email: res.email,\r\n        tosAgreement: true\r\n\r\n      };\r\n\r\n      console.log(data);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onDateChange = date_of_birth => this.setState({ date_of_birth });\r\n\r\n  errorToast = null;\r\n  notify = error => {\r\n    // if (this.errorToast) {\r\n    //   toast.dismiss(this.errorToast);\r\n    // }\r\n    let errorArray = error.response.data.Error\r\n    if (errorArray.constructor === Array ) {\r\n      \r\n      errorArray.forEach(error => {\r\n        if (error === 'tosAgreement cannot be false') {\r\n          error = \"you must agree to the terms and conditions\"\r\n        }\r\n        this.errorToast = toast.error(\r\n          \"Registration Failed: \" + error,\r\n          {\r\n            position: toast.POSITION.TOP_LEFT,\r\n            autoClose: false\r\n          }\r\n        );\r\n      });\r\n    } else {\r\n      this.errorToast = toast.error(\r\n        \"Registration Failed: \" + errorArray,\r\n        {\r\n          position: toast.POSITION.TOP_LEFT,\r\n          autoClose: false\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const responseFacebook = response => {\r\n      console.log(response);\r\n      this.signup(response, \"facebook\");\r\n    };\r\n        const responseGoogle = response => {\r\n            console.log(response);\r\n            this.signup(response, \"google\");\r\n        };\r\n\r\n    // const { password, email, phone, tosAgreement, data_of_birth } = this.state;\r\n\r\n    // function responseLinkedin(response) {\r\n    //     console.log(response);\r\n    //     this.signup(response, \"linkedin\");\r\n    // }\r\n\r\n    function responseTwitter(response) {\r\n          console.log(response);\r\n          this.signup(response, \"twitter\");\r\n      };\r\n\r\n    // function responseTwittrer(response) {\r\n    //     const token = response.headers.get('x-auth-token');\r\n    //     response.json().then(user => {\r\n    //         if (token) {\r\n    //             this.setState({isAuthenticated: true, user: user, token: token});\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n\r\n    const { password, email, phone, redirect, tosAgreement } = this.state;\r\n    if(redirect){\r\n\r\n        return (<Redirect to={\"/profile/create\"}/>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"auth-page d-flex\">\r\n          <AuthBackground />\r\n          <div className=\"authy\">\r\n            <div className=\"m-auto bg-white auth-page-card col-lg-7 col-md-8\">\r\n              <h2 className=\"auth-card-title text-center mb-3\">\r\n                Create A GClout Account\r\n              </h2>\r\n              <div className=\"row --with-divider\">\r\n                <div className=\"col-md-12 col-lg-6 mx-auto\">\r\n                  <form className=\"auth-form mb-4\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email address</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        onChange={ev => this.onChange(\"email\", ev)}\r\n                        value={email}\r\n                        placeholder=\"Email address\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={ev => this.onChange(\"password\", ev)}\r\n                        value={password}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md left\">\r\n                        <label htmlFor=\"phone\">Phone number</label>\r\n                        <input\r\n                          type=\"phone\"\r\n                          className=\"form-control\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Phone number\"\r\n                          onChange={ev => this.onChange(\"phone\", ev)}\r\n                          value={phone}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md right\">\r\n                        <label>Date of birth</label>\r\n                        <DatePicker\r\n                          className=\"form-date\"\r\n                          onChange={this.onDateChange}\r\n                          value={this.state.date_of_birth}\r\n                          Calendar={null}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"mr-2\"\r\n                          type=\"checkbox\"\r\n                          ref=\"check_me\"\r\n                          value={tosAgreement}\r\n                          onChange={e => {\r\n                            this.setState({ tosAgreement: e.target.checked });\r\n                          }}\r\n                          required\r\n                        />\r\n                        <label\r\n                          htmlFor=\"agreement\"\r\n                          className=\"form-check-label\"\r\n                          name=\"tosAgreement\"\r\n                        >\r\n                          I agree with terms and conditions\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-block btn-gclout-blue\"\r\n                      onClick={this.handleSubmit}\r\n                    >\r\n                      {this.state.loading ? (\r\n                        <i className=\"fas fa-circle-notch fa-spin\" />\r\n                      ) : (\r\n                        \"Register\"\r\n                      )}{\" \"}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n                <div className=\"vertical-divider\">OR</div>\r\n                <div className=\"col-md-12 col-lg-6 mx-auto\">\r\n                  <div className=\"social-buttons\">\r\n\r\n                      <GoogleLogin\r\n                          className=\"social-button-google btn btn-block\"\r\n                          clientId=\"721177315518-ebi0q400rdhuvphrkff962s5encqd3b4.apps.googleusercontent.com\"\r\n                          buttonText=\"Google\"\r\n                          onSuccess={responseGoogle}\r\n                          onFailure={responseGoogle}\r\n                      >\r\n                          <i className=\"fab fa-google\" /> Google\r\n                      </GoogleLogin>\r\n\r\n                      <TwitterLogin\r\n                         // loginUrl=\"http://localhost:3000/login/auth/twitter\"\r\n                          /*onFailure={this.onFailed}*/\r\n                          /*onSuccess={this.onSuccess}*/\r\n                          loginUrl=\"http://api.gclout.com:3000/users\"\r\n                          onSuccess={responseTwitter}\r\n                          onFailure={responseTwitter}\r\n                          forceLogin={true}\r\n                          className=\"social-button-twitter btn btn-block\"\r\n                          clientKey=\"JNjAaqePXPy5cXMjdlPYXuMWf\"\r\n                          requestTokenUrl=\"http://api.gclout.com:3000/users\"\r\n                          //requestTokenUrl=\"http://localhost:3000/login/auth/twitter/reverse\"\r\n                      >\r\n                        <i className=\"fab fa-twitter\" /> Twitter\r\n                      </TwitterLogin>\r\n\r\n                      <FacebookLogin\r\n                      appId=\"2171139129879186\"\r\n                      autoLoad={true}\r\n                      fields=\"name,email,picture\"\r\n                      callback={responseFacebook}\r\n                      cssClass=\"social-button-facebook btn btn-block\"\r\n                      icon=\"fa-facebook\"\r\n                      textButton=\"Facebook\"\r\n                    />\r\n\r\n                      {/* <LinkedIn\r\n                          clientId=\"77pb6qtint69q4\"\r\n                          callback={this.callbackLinkedIn}\r\n                          text=\"Login With LinkedIn\"\r\n                          onSuccess={responseLinkedin}\r\n                          onFailure={responseLinkedin}\r\n                          className=\"social-button-linkedin btn btn-block\"\r\n                      /> */}\r\n                      <button\r\n                        className=\"social-button-linkedin btn btn-block\">\r\n                        <i className=\"fab fa-linkedin-in\" />\r\n                        Linkedin\r\n                      </button>\r\n\r\n                  </div>\r\n                  <p className=\"text-center\">\r\n                    Already have an account?{\" \"}\r\n                    <Link className=\"auth-page-link\" to=\"/login\">\r\n                      Sign in\r\n                    </Link>{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}