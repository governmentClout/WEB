{"version":3,"sources":["pages/auth/ResetPasswordCode.js","components/authBackground/authBackground.jsx"],"names":["ResetPasswordCode","_this","_classCallCheck","this","_getPrototypeOf","call","state","code","redirect","onChange","bind","_assertThisInitialized","onSubmit","Component","e","setState","target","name","value","_this2","preventDefault","data","reset_code","console","log","axios","method","url","then","res","uuid","swal","sessionStorage","setItem","catch","err","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","className","_components_authBackground_authBackground__WEBPACK_IMPORTED_MODULE_2__","htmlFor","type","placeholder","required","AuthBackground","props","Array","isArray","length","tempArr","slice","i","swapIndex","Math","trunc","random","tmp","imagesList","shuffleList","bottomImages","temArr","rearrangeArray","concat","_toConsumableArray","map","imageUrl","index","key","src","alt"],"mappings":"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","file":"static/js/ResetPasswordCode.30674c6f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../assets/css/auth.css\";\nimport AuthBackground from \"./../../components/authBackground/authBackground\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nclass ResetPasswordCode extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n\n            code: \"\",\n            redirect: false\n\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n\n        this.setState({\n\n            [e.target.name]: e.target.value\n\n        });\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n\n        const data = {\n\n            reset_code : this.state.code\n\n        };\n\n        console.log(data);\n\n        axios({\n\n            method: 'post',\n            url: `http://api.gclout.com:3000/resets/code`,\n            data: data\n\n        }).then(res => {\n\n            console.log(res.data);\n            if(res.data.uuid){\n                \n                swal('Operation Successful!');\n                sessionStorage.setItem(\"resetuuid\", res.data.uuid);\n            \n            }\n            \n            this.setState({\n                \n                code: \"\",\n                redirect: true\n            \n            })\n\n        }).catch(err => {\n\n            console.log(err);\n\n        })\n\n    }\n    render() {\n        \n        const { redirect } = this.state;\n\n        if(redirect){\n            return (\n                <Redirect to={'/password-reset'}/>\n            )\n        }\n        return (\n                <div>\n                    <div className=\"auth-page d-flex\">\n                        <AuthBackground />\n                        <div className=\"authy\">\n                            <div className=\"m-auto bg-white auth-page-card col-lg-7 col-md-8\">\n                                <h2 className=\"auth-card-title text-center mb-3\">\n                                    Forgot Your Password\n                                </h2>\n                                <p className=\"auth-card-subtitle mb-3 text-center col-12 col-md-8 offset-md-2\">\n                                    Enter the code to rset the password\n                                </p>\n                                <div className=\"col-md-8 offset-md-2 mb-4\">\n                                    <form className=\"auth-form my-4\" onSubmit={this.onSubmit}>\n                                        <div className=\"form-group my-4\">\n                                            <label htmlFor=\"email\">CODE</label>\n                                            <input\n                                                className=\"form-control\"\n                                                type=\"text\"\n                                                placeholder=\"Enter your code\"\n                                                name=\"code\"\n                                                onChange={this.onChange}\n                                                value={this.state.code}\n                                                required\n                                            />\n                                        </div>\n                                        <button className=\"btn btn-block btn-gclout-blue mb-3\">\n                                            RESET\n                                        </button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default ResetPasswordCode;\n","import React, { Component } from \"react\";\nimport \"./authBackground.css\";\n\nclass AuthBackground extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagesList: [],\n      shuffleList: [\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884672/gclout/1.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/2.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884668/gclout/16.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884667/gclout/15.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884664/gclout/13.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/11.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884660/gclout/9.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/7.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884654/gclout/4.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/5.png\",\n      ],\n      bottomImages: [\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/3.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884666/gclout/14.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/10.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/6.png\"\n      ]\n    }\n  }\n  rearrangeArray = (data) => {\n\n    if (Array.isArray(data) || data.length > 0) {\n\n        let tempArr = data.slice();\n\n        for (let i = 0; i < tempArr.length; i++) {\n            let swapIndex = Math.trunc(Math.random() * tempArr.length);\n            let tmp = tempArr[swapIndex];\n            tempArr[swapIndex] = tempArr[i];\n            tempArr[i] = tmp;\n        }\n        return tempArr;\n    }\n    return [];\n  }\n  componentDidMount() {\n    const temArr = this.rearrangeArray(this.state.shuffleList);\n    const fullArr = [temArr, ...this.state.bottomImages];\n    this.setState({\n      imagesList: temArr\n    })\n  }\n\n  render() {\n    \n    return (\n      <div className=\"d-flex align-items-stretch flex-wrap no-gutters auth-bg\">\n        <div className=\"auth-bg-overlay\" />\n        {this.state.imagesList.map((imageUrl, index) => (\n          <div className=\"col-md-3 col-sm-4 col-6 authBg\" key={\"key-\" + index}>\n            <img\n              src={imageUrl}\n              alt={\"bg-image-\" + index}\n              className=\"img-fluid\"\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AuthBackground;\n"],"sourceRoot":""}