{"version":3,"sources":["pages/auth/login.jsx","components/authBackground/authBackground.jsx"],"names":["Login","props","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","error","errorToast","toast","dismiss","position","POSITION","TOP_LEFT","autoClose","state","email","password","loading","redirectToReferrer","signin","bind","Component","ev","setState","target","name","value","_this2","preventDefault","data","provider","url","concat","API_URL","axios","method","headers","Content-Type","then","response","responseJSON","f","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","that","login","user","stop","apply","arguments","sessionStorage","setItem","uuid","token","JSON","stringify","catch","notify","res","type","_this3","w3","U3","_ref2","_callee2","_context2","console","log","_this4","responseGoogle","from","location","pathname","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","className","_components_authBackground_authBackground__WEBPACK_IMPORTED_MODULE_2__","onSubmit","postData","htmlFor","placeholder","onChange","dataChange","required","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","style","width","react_google_login__WEBPACK_IMPORTED_MODULE_8___default","clientId","buttonText","onSuccess","onFailure","react_toastify__WEBPACK_IMPORTED_MODULE_6__","AuthBackground","Array","isArray","length","tempArr","slice","i","swapIndex","Math","trunc","random","tmp","imagesList","shuffleList","bottomImages","temArr","rearrangeArray","_toConsumableArray","map","imageUrl","index","key","src","alt"],"mappings":"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","file":"static/js/Login.d0fbd4f7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../assets/css/auth.css\";\r\nimport AuthBackground from \"./../../components/authBackground/authBackground\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { API_URL } from \"../../components/config\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      redirectToReferrer: false\r\n    };\r\n    this.signin = this.signin.bind(this);\r\n  }\r\n\r\n  dataChange(ev) {\r\n    this.setState({\r\n      [ev.target.name]: ev.target.value\r\n    });\r\n  }\r\n\r\n  postData(ev) {\r\n    ev.preventDefault();\r\n    this.setState({ loading: true });\r\n    const email = this.state.email,\r\n      password = this.state.password,\r\n      provider = \"email\",\r\n      data = {\r\n        email,\r\n        password,\r\n        provider\r\n      },\r\n      url = `${API_URL}/login`;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"text/plain;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        let responseJSON = response\r\n        if (responseJSON.data) {\r\n          sessionStorage.setItem(\"uuid\", responseJSON.data.user.uuid);\r\n          sessionStorage.setItem(\"token\", responseJSON.data.user.token);\r\n          sessionStorage.setItem(\"data\", JSON.stringify(responseJSON));\r\n          let that = this;\r\n          async function f() {\r\n            that.props.login(responseJSON.data.user)\r\n          }\r\n          f().then(that.setState(() => ({\r\n            redirectToReferrer: true\r\n          })))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.notify(error);\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  signin(res, type) {\r\n    if (type === \"google\" && res.w3.U3) {\r\n      const data = {\r\n        provider: type,\r\n        email: res.w3.U3\r\n      };\r\n      const url = \"http://api.gclout.com:3000/login\";\r\n      axios({\r\n        method: 'post',\r\n        url: url,\r\n        data: data,\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        }\r\n      })\r\n        .then(response => {\r\n          if (response.data) {\r\n            sessionStorage.setItem(\"data\", JSON.stringify(response));\r\n            let that = this;\r\n            async function f() {\r\n              that.props.login(response.data.user)\r\n            }\r\n            f().then(that.setState(() => ({\r\n              redirectToReferrer: true\r\n            })))\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.notify(error);\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    }\r\n  }\r\n  errorToast = null;\r\n  notify = error => {\r\n    if (this.errorToast) {\r\n      toast.dismiss(this.errorToast);\r\n    }\r\n    this.errorToast = toast.error(\r\n      \"Login Failed: \" + error,\r\n      {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: false\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    const responseGoogle = response => {\r\n      console.log(response);\r\n      this.signin(response, \"google\");\r\n    };\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n    const { redirectToReferrer } = this.state\r\n\r\n    if (redirectToReferrer === true) {\r\n      return <Redirect to={from} />\r\n    }\r\n    return (\r\n      <div className=\"auth-page d-flex\">\r\n        <AuthBackground />\r\n        <div className=\"authy\">\r\n          <div className=\"m-auto bg-white auth-page-card col-lg-7 col-md-8\">\r\n            <h2 className=\"auth-card-title text-center mb-3\">\r\n              Sign Into Your GClout Account\r\n            </h2>\r\n            <div className=\"row --with-divider\">\r\n              <div className=\"col-md-6\">\r\n                <form\r\n                  className=\"auth-form mb-4\"\r\n                  onSubmit={this.postData.bind(this)}\r\n                >\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email address\"\r\n                      onChange={this.dataChange.bind(this)}\r\n                      value={this.state.email}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      onChange={this.dataChange.bind(this)}\r\n                      value={this.state.password}\r\n                      placeholder=\"Password\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <button className=\"btn btn-block btn-gclout-blue\">\r\n                    {this.state.loading ? (\r\n                      <i className=\"fas fa-circle-notch fa-spin\" />\r\n                    ) : (\r\n                        \"Sign in\"\r\n                      )}\r\n                  </button>\r\n                  <div className=\"form-group mt-2 d-flex\">\r\n                    <div className=\"form-check\">\r\n                      <input className=\"mr-2\" type=\"checkbox\" />\r\n                      <label htmlFor=\"remember\" className=\"form-check-label\">\r\n                        Remember me\r\n                      </label>\r\n                    </div>\r\n                    <Link\r\n                      to=\"/forgot-password\"\r\n                      className=\"auth-page-link text-right\"\r\n                      style={{ width: \"55%\" }}\r\n                    >\r\n                      Forgot password\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"vertical-divider\">OR</div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"social-buttons\">\r\n                  <button className=\"social-button-facebook btn btn-block\">\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                    Facebook\r\n                  </button>\r\n                  <button className=\"social-button-twitter btn btn-block\">\r\n                    <i className=\"fab fa-twitter\" />\r\n                    Twitter\r\n                  </button>\r\n                  <GoogleLogin\r\n                    className=\"social-button-google btn btn-block\"\r\n                    clientId=\"721177315518-ebi0q400rdhuvphrkff962s5encqd3b4.apps.googleusercontent.com\"\r\n                    buttonText=\"Google\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                  >\r\n                    <i className=\"fab fa-google\" /> Google\r\n                    </GoogleLogin>\r\n                  <button className=\"social-button-linkedin btn btn-block\">\r\n                    <i className=\"fab fa-linkedin-in\" />\r\n                    Linkedin\r\n                  </button>\r\n                </div>\r\n                <p className=\"text-center\">\r\n                  Dont have an account?{\" \"}\r\n                  <Link className=\"auth-page-link\" to=\"/register\">\r\n                    Sign up\r\n                  </Link>{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\nimport \"./authBackground.css\";\n\nclass AuthBackground extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagesList: [],\n      shuffleList: [\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884672/gclout/1.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/2.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884668/gclout/16.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884667/gclout/15.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884664/gclout/13.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/11.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884660/gclout/9.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884663/gclout/12.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/7.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884654/gclout/4.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/5.png\",\n      ],\n      bottomImages: [\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884671/gclout/3.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884666/gclout/14.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884661/gclout/10.png\",\n        \"https://res.cloudinary.com/plushdeveloper/image/upload/v1538884655/gclout/6.png\"\n      ]\n    }\n  }\n  rearrangeArray = (data) => {\n\n    if (Array.isArray(data) || data.length > 0) {\n\n        let tempArr = data.slice();\n\n        for (let i = 0; i < tempArr.length; i++) {\n            let swapIndex = Math.trunc(Math.random() * tempArr.length);\n            let tmp = tempArr[swapIndex];\n            tempArr[swapIndex] = tempArr[i];\n            tempArr[i] = tmp;\n        }\n        return tempArr;\n    }\n    return [];\n  }\n  componentDidMount() {\n    const temArr = this.rearrangeArray(this.state.shuffleList);\n    const fullArr = [temArr, ...this.state.bottomImages];\n    this.setState({\n      imagesList: temArr\n    })\n  }\n\n  render() {\n    \n    return (\n      <div className=\"d-flex align-items-stretch flex-wrap no-gutters auth-bg\">\n        <div className=\"auth-bg-overlay\" />\n        {this.state.imagesList.map((imageUrl, index) => (\n          <div className=\"col-md-3 col-sm-4 col-6 authBg\" key={\"key-\" + index}>\n            <img\n              src={imageUrl}\n              alt={\"bg-image-\" + index}\n              className=\"img-fluid\"\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AuthBackground;\n"],"sourceRoot":""}